{"version":3,"sources":["Task.jsx","App.jsx","index.jsx"],"names":["Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","checked","_this2","react_default","a","createElement","id","task","title","onClick","completed","delFunc","Component","App","handleAddTodo","countEntries","setState","tasks","concat","toConsumableArray","refTextBox","current","value","handleTextChange","event","target","handleRemoveCompleted","filter","handleSubmitKey","key","createRef","Fragment","type","placeholder","onChange","onKeyPress","autoComplete","ref","map","index","src_Task_0","ReactDOM","createRoot","document","getElementById","render","src_App_0"],"mappings":"wNA2BeA,qBAvBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,SAAS,GAFPR,wEAIV,IAAAS,EAAAN,KACP,OACEO,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACNH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,SAASV,KAAKJ,MAAMe,KAAKC,OAElCL,EAAAC,EAAAC,cAAA,UACEC,GAAG,SACHG,QAAS,WACPP,EAAKV,MAAMe,KAAKG,WAAY,EAC5BR,EAAKV,MAAMmB,YAJf,kBAVWC,cCkFJC,qBAhFb,SAAAA,EAAYrB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,IACjBpB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,KAAAH,KAAMJ,KAQRsB,cAAgB,WACkB,IAA5BrB,EAAKO,MAAMe,eACbtB,EAAKuB,SACH,CACEC,MAAK,GAAAC,OAAAxB,OAAAyB,EAAA,EAAAzB,CACAD,EAAKO,MAAMiB,OADX,CAEH,CAAET,MAAOf,EAAKO,MAAMQ,MAAOE,WAAW,MAG1C,WACEjB,EAAKuB,SAAS,CAAED,aAAc,MAGlCtB,EAAK2B,WAAWC,QAAQC,MAAQ,KAtBjB7B,EAyBnB8B,iBAAmB,SAACC,GAClB/B,EAAKuB,SAAS,CAAER,MAAOgB,EAAMC,OAAOH,OAAS,WAC3C7B,EAAKuB,SAAS,CAAED,aAAc,OA3BftB,EA8BnBiC,sBAAwB,WACtBjC,EAAKuB,SAAS,CACZC,MAAOxB,EAAKO,MAAMiB,MAAMU,OAAO,SAACpB,GAAD,OAAWA,EAAKG,eAhChCjB,EAmCnBmC,gBAAkB,SAACJ,GACC,UAAdA,EAAMK,KACRpC,EAAKqB,iBAnCPrB,EAAKO,MAAQ,CACXiB,MAAO,GACPT,MAAO,GACPO,aAAc,GAEhBtB,EAAK2B,WAAaU,oBAAU,MAPXrC,wEAyCV,IAAAS,EAAAN,KACP,OACEO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAAA,MAAIC,GAAG,UAAP,aACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,GAAG,UACH0B,KAAK,OACLC,YAAY,oBACZC,SAAUtC,KAAK2B,iBACfd,QAAS,WACPP,EAAKkB,WAAWC,QAAQC,MAAQ,IAElCa,WAAYvC,KAAKgC,gBACjBQ,aAAa,MACbC,IAAKzC,KAAKwB,aAEZjB,EAAAC,EAAAC,cAAA,UAAQI,QAASb,KAAKkB,cAAeR,GAAG,WAAxC,YAIAH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACLV,KAAKI,MAAMiB,MAAMqB,IAAI,SAAC/B,EAAMgC,GAC3B,OACEpC,EAAAC,EAAAC,cAACmC,EAAD,CACE7B,QAAST,EAAKwB,sBACdnB,KAAMA,EACNsB,IAAKU,gBAtEL3B,cCAL6B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD","file":"static/js/main.aff77eca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Task.css\";\r\n\r\nclass Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { checked: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Task\">\r\n        <span id=\"Title\">{this.props.task.title}</span>\r\n\r\n        <button\r\n          id=\"Delete\"\r\n          onClick={() => {\r\n            this.props.task.completed = true;\r\n            this.props.delFunc();\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\nimport React, { Component, createRef } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      title: \"\",\n      countEntries: 1,\n    };\n    this.refTextBox = createRef(null);\n  }\n  handleAddTodo = () => {\n    if (this.state.countEntries === 0) {\n      this.setState(\n        {\n          tasks: [\n            ...this.state.tasks,\n            { title: this.state.title, completed: false },\n          ],\n        },\n        () => {\n          this.setState({ countEntries: 1 });\n        }\n      );\n      this.refTextBox.current.value = \"\";\n    }\n  };\n  handleTextChange = (event) => {\n    this.setState({ title: event.target.value }, () => {\n      this.setState({ countEntries: 0 });\n    });\n  };\n  handleRemoveCompleted = () => {\n    this.setState({\n      tasks: this.state.tasks.filter((task) => !task.completed),\n    });\n  };\n  handleSubmitKey = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleAddTodo();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h2 id=\"Header\">To-Do App</h2>\n        <br />\n        <div>\n          <input\n            id=\"TextBox\"\n            type=\"text\"\n            placeholder=\"Enter a Task Here\"\n            onChange={this.handleTextChange}\n            onClick={() => {\n              this.refTextBox.current.value = \"\";\n            }}\n            onKeyPress={this.handleSubmitKey}\n            autoComplete=\"off\"\n            ref={this.refTextBox}\n          />\n          <button onClick={this.handleAddTodo} id=\"AddTodo\">\n            Add Todo\n          </button>\n\n          <div id=\"TodoList\">\n            {this.state.tasks.map((task, index) => {\n              return (\n                <Task\n                  delFunc={this.handleRemoveCompleted}\n                  task={task}\n                  key={index}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}